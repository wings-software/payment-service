pipeline:
  name: payment-service
  identifier: paymentserviceweb
  projectIdentifier: DevX_Demo
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: DeployDev
        identifier: DeployDev
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceDefinition:
              type: Kubernetes
              spec:
                manifestOverrideSets: []
                manifests:
                  - manifest:
                      identifier: templates
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: nikpgithub
                            gitFetchType: Branch
                            paths:
                              - templates
                            repoName: payment-service-nonprod
                            branch: master
                        skipResourceVersioning: false
                  - manifest:
                      identifier: values
                      type: Values
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: nikpgithub
                            gitFetchType: Branch
                            paths:
                              - values-non-prod.yaml
                            repoName: payment-service-nonprod
                            branch: master
                artifacts:
                  sidecars: []
                  primary:
                    spec:
                      connectorRef: nikpdockerhub
                      imagePath: nikpap/payment-service
                      tag: <+pipeline.variables.artifact>
                    type: DockerRegistry
            serviceRef: paymentservicesrm_dev
          infrastructure:
            environmentRef: GKEDEV
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: nikpgkecluster
                namespace: payment-service
                releaseName: release-1
            allowSimultaneousDeployments: true
            infrastructureKey: ""
          execution:
            steps:
              - step:
                  type: JiraCreate
                  name: JiraCreate
                  identifier: JiraCreate
                  spec:
                    connectorRef: account.Harness_JIRA
                    projectKey: HD
                    issueType: Story
                    fields:
                      - name: Summary
                        value: Ticket to track deployment of <+pipeline.variables.servicename> triggered by <+pipeline.variables.seusername>
                      - name: Description
                        value: "triggeredBy: <+pipeline.variables.seusername> buildNumber: <+pipeline.sequenceId>"
                  timeout: 1d
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
              - step:
                  type: ShellScript
                  name: Selenium
                  identifier: Selenium
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |-
                          selenium_results="# [info] Executing: |View Balance | /paymentservice/viewBalance 
                          # [info] Actual value 'Match with the expected'
                          # [info] Executing: |Perform Transaction | /paymentservice/createTransaction
                          # [info] Actual value 'Successful Transaction'
                          # [info] Executing: |verifyPayment | /paymentservice/verifyPayment
                          # [info] Actual value 'Payment verified'
                          # [info] Executing: |verifyElementPresent | //input[contains(@src,'/ndmns/../images/wap2/img/framework/search_button.png')]
                          # [info] Actual value 'ElementPresent'
                          # [info] Executing: |verifyElementPresent | //img[contains(@src,'ad-banners/banner_ideas_240x40.jpg')] 
                          # [info] Actual value 'ElementPresent'"

                          echo $selenium_results

                          export selenium_output=$selenium_results
                    environmentVariables: []
                    outputVariables:
                      - name: selenium_output
                        type: String
                        value: selenium_output
                  timeout: 10m
              - step:
                  type: JiraUpdate
                  name: JiraUpdate
                  identifier: JiraUpdate
                  spec:
                    connectorRef: account.Harness_JIRA
                    issueKey: <+pipeline.stages.DeployDev.spec.execution.steps.JiraCreate.issue.id>
                    transitionTo:
                      transitionName: In Progress
                      status: In Progress
                    fields:
                      - name: Test Summary
                        value: <+pipeline.stages.DeployDev.spec.execution.steps.Selenium.output.outputVariables.selenium_output>
                  timeout: 1d
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
    - stage:
        name: Jira Approve
        identifier: Jira_Approve
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Jira Approval
                  identifier: jiraApproval
                  type: JiraApproval
                  timeout: 1d
                  spec:
                    approvalCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: Approved
                    rejectionCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: false
                        conditions:
                          - key: Status
                            operator: equals
                            value: Rejected
                    connectorRef: account.Harness_JIRA
                    projectKey: HD
                    issueKey: <+pipeline.stages.DeployDev.spec.execution.steps.JiraCreate.issue.key>
            rollbackSteps: []
          serviceDependencies: []
        tags: {}
        when:
          pipelineStatus: Success
    - stage:
        name: DeployProd
        identifier: DeployProd
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: <+input>
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
                manifests:
                  - manifest:
                      identifier: templates
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: nikpgithub
                            gitFetchType: Branch
                            paths:
                              - templates-prod
                            repoName: payment-service-nonprod
                            branch: master
                        skipResourceVersioning: false
                  - manifest:
                      identifier: values
                      type: Values
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: nikpgithub
                            gitFetchType: Branch
                            paths:
                              - values-non-prod.yaml
                            repoName: payment-service-nonprod
                            branch: master
                artifacts:
                  primary:
                    spec:
                      connectorRef: nikpdockerhub
                      imagePath: nikpap/payment-service
                      tag: <+pipeline.variables.artifact>
                    type: DockerRegistry
          infrastructure:
            environmentRef: GKEPROD
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: nikpgkecluster
                namespace: payment-service
                releaseName: release-1
            allowSimultaneousDeployments: true
            infrastructureKey: ""
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        type: Verify
                        name: verify_canary
                        identifier: verify_dev
                        spec:
                          type: Canary
                          spec:
                            sensitivity: LOW
                            duration: 5m
                            deploymentTag: <+serviceConfig.artifacts.primary.tag>
                        timeout: 2h
                        failureStrategies:
                          - onFailure:
                              errors:
                                - Verification
                              action:
                                type: ManualIntervention
                                spec:
                                  timeout: 2h
                                  onTimeout:
                                    action:
                                      type: StageRollback
                          - onFailure:
                              errors:
                                - Unknown
                              action:
                                type: ManualIntervention
                                spec:
                                  timeout: 2h
                                  onTimeout:
                                    action:
                                      type: Ignore
                        when:
                          stageStatus: Success
                          condition: <+pipeline.variables.verify_fail> == "false"
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
                  rollbackSteps:
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
                  rollbackSteps:
                    - step:
                        name: Rolling Rollback
                        identifier: rollingRollback
                        type: K8sRollingRollback
                        timeout: 10m
                        spec: {}
              - step:
                  type: ShellScript
                  name: WrapUp
                  identifier: WrapUp
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "Wrapping up deployment"
                          url="http://$subdomain.cie-demo.co.uk"
                          export application="$url"
                    environmentVariables:
                      - name: subdomain
                        type: String
                        value: <+pipeline.variables.seusername>
                    outputVariables:
                      - name: application
                        type: String
                        value: application
                    executionTarget: {}
                  timeout: 10m
              - step:
                  type: JiraUpdate
                  name: JiraUpdate
                  identifier: JiraUpdate
                  spec:
                    connectorRef: account.Harness_JIRA
                    issueKey: <+pipeline.stages.DeployDev.spec.execution.steps.JiraCreate.issue.key>
                    transitionTo:
                      transitionName: Done
                      status: Done
                    fields: []
                  timeout: 1d
              - step:
                  type: K8sApply
                  name: Autostopping
                  identifier: Autostopping
                  spec:
                    filePaths:
                      - autostopping/ccm-autostoppingrule.yaml
                    skipDryRun: false
                    skipSteadyStateCheck: false
                  timeout: 10m
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.autostopping> == "true"
                  failureStrategies: []
            rollbackSteps:
              - step:
                  type: K8sCanaryDelete
                  name: Canary Rollback
                  identifier: Canary_Rollback
                  spec:
                    skipDryRun: false
                  timeout: 10m
          serviceDependencies: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
  variables:
    - name: servicename
      type: String
      default: payment-service
      value: payment-service
    - name: seusername
      type: String
      value: <+input>
    - name: ffsdkkeyprod
      type: String
      default: 44c9dcaa-dab2-4100-b2b5-75bdeb7aa497
      value: 44c9dcaa-dab2-4100-b2b5-75bdeb7aa497
    - name: isingress
      type: Number
      default: 1
      value: 1
    - name: verify_fail
      type: String
      default: "false"
      value: <+input>.allowedValues(true,false)
    - name: dbuser
      type: Secret
      value: dbuser
    - name: dbpassword
      type: Secret
      value: dbpassword
    - name: verify_fail2
      type: String
      value: test
    - name: autostopping
      type: String
      default: "false"
      value: <+input>.allowedValues(true,false)
    - name: artifact
      type: String
      description: ""
      value: <+input>.allowedValues(1503,1505)
  flowControl:
    barriers:
      - name: Barrier
        identifier: Barrier
