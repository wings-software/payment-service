pipeline:
  name: payment-service
  identifier: paymentserviceweb
  projectIdentifier: DevX_Demo
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: DeployDev
        identifier: DeployDev
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: paymentservicemultipod
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: GKEDEV
            deployToAll: false
            infrastructureDefinitions:
              - identifier: K8s_Dev_Namespace
          execution:
            steps:
              - step:
                  name: Rollout Deployment1
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: ShellScript
                  name: ShellScript_2
                  identifier: ShellScript_2
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo <+pipeline.stages.DeployDev.spec.execution.steps.rolloutDeployment.deploymentInfoOutcome.serverInstanceInfoList>
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo "hello"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
                  strategy:
                    matrix:
                      host: <+pipeline.stages.DeployDev.spec.execution.steps.rolloutDeployment.deploymentInfoOutcome.serverInstanceInfoList>
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
  variables:
    - name: mavenversion
      type: String
      default: "3.8"
      value: <+input>
    - name: javaversion
      type: String
      default: "8"
      value: <+input>
    - name: servicename
      type: String
      default: payment-service
      value: payment-service
    - name: seusername
      type: String
      value: <+input>
    - name: ffsdkkeyprod
      type: String
      default: 44c9dcaa-dab2-4100-b2b5-75bdeb7aa497
      value: <+secrets.getValue("ffsdkprod")>
    - name: isingress
      type: Number
      default: 1
      value: 1
    - name: verify_fail
      type: String
      default: "false"
      value: <+input>.allowedValues(true,false)
    - name: run_owasp_scan
      type: String
      default: "false"
      value: <+input>.allowedValues(true,false)
    - name: dbuser
      type: Secret
      value: dbuser
    - name: dbpassword
      type: Secret
      value: dbpassword
    - name: verify_fail2
      type: String
      value: test
    - name: autostopping
      type: String
      default: "false"
      value: <+input>.allowedValues(true,false)
    - name: hosted
      type: String
      description: ""
      value: <+input>.allowedValues(true,false)
  flowControl:
    barriers:
      - name: Barrier
        identifier: Barrier
  allowStageExecutions: true
