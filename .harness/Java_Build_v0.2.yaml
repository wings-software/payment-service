template:
  name: Java Build
  type: Stage
  projectIdentifier: DevX_Demo
  orgIdentifier: default
  spec:
    type: CI
    spec:
      cloneCodebase: true
      infrastructure:
        type: KubernetesDirect
        spec:
          connectorRef: nikpgkecluster
          namespace: payment-service-build
          automountServiceAccountToken: true
          nodeSelector: {}
          os: Linux
      execution:
        steps:
          - step:
              type: RestoreCacheS3
              name: RestoreCache
              identifier: RestoreCache
              spec:
                connectorRef: nikpaws
                region: eu-west-2
                bucket: nikp-maven
                key: payment-service-ci
                archiveFormat: Tar
                resources:
                  limits:
                    memory: 512Mi
                    cpu: "0.5"
              when:
                stageStatus: Success
              failureStrategies: []
          - parallel:
              - step:
                  type: RunTests
                  name: runTestsWithIntelligence
                  identifier: runTestsWithIntelligence
                  spec:
                    connectorRef: devxgcp
                    image: gcr.io/sales-209522/devx-maven:<+pipeline.variables.mavenversion>-jdk-<+pipeline.variables.javaversion>
                    language: Java
                    buildTool: Maven
                    args: clean test
                    packages: com.nikp.
                    runOnlySelectedTests: true
                    preCommand: |
                      cd payment-service
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    envVariables:
                      DRONE_COMMIT_SHA: any
                      DRONE_REMOTE_URL: any
                      DRONE_SOURCE_BRANCH: any
                      DRONE_TARGET_BRANCH: any
                      MAVEN_OPTS: "-Dmaven.repo.local=/harness/maven/repository"
                      CONTAINER_STEP: "3"
                    resources:
                      limits:
                        memory: 6Gi
                        cpu: "6"
                  description: aderasdsad
                  failureStrategies: []
              - step:
                  type: Plugin
                  name: cleanup
                  identifier: cleanup
                  spec:
                    connectorRef: nikpdockerhub
                    image: nikpap/githubcli:v2
                    privileged: false
                    settings:
                      GITHUB_TOKEN: <+secrets.getValue("githubtoken")>
                      GITHUB_USERNAME: nikpapag
                      GITHUB_EMAIL: nikpap.cs@icloud.com
                    imagePullPolicy: Always
                    resources:
                      limits:
                        memory: 3Gi
                  failureStrategies:
                    - onFailure:
                        errors:
                          - Unknown
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
                    condition: <+trigger.branch> != "master-2-1"
          - step:
              type: Run
              name: Build
              identifier: Build
              spec:
                connectorRef: nikpdockerhub
                image: maven:<+pipeline.variables.mavenversion>-jdk-<+pipeline.variables.javaversion>
                shell: Sh
                command: |-
                  cd payment-service
                  mvn -Dmaven.test.skip=true clean install -X
                  #
                privileged: false
                envVariables:
                  MAVEN_OPTS: "-Dmaven.repo.local=/harness/maven/repository"
                resources:
                  limits:
                    memory: 3Gi
                    cpu: "2"
              when:
                stageStatus: Success
              failureStrategies: []
              description: This builds payment service even better. And now with style!sad
          - parallel:
              - step:
                  type: Security
                  name: Fortify
                  identifier: fortify
                  spec:
                    connectorRef: account.Harness_Docker_Connector
                    privileged: true
                    settings:
                      product_name: fortify
                      product_config_name: fortify-default
                      policy_type: manualUpload
                      scan_type: repository
                      repository_project: payment-service
                      repository_branch: <+codebase.branch>
                      customer_artifacts_path: sto_tests/scan_tools/fortify/test_data
                      manual_upload_filename: "001"
                    imagePullPolicy: Always
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
              - step:
                  type: Security
                  name: OWASP
                  identifier: OWASP
                  spec:
                    privileged: true
                    settings:
                      policy_type: orchestratedScan
                      scan_type: repository
                      repository_project: payment-service
                      repository_branch: <+codebase.branch>
                      product_name: owasp
                      product_config_name: owasp 5.x
                      fail_on_severity: HIGH
                    imagePullPolicy: Always
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.run_owasp_scan> == true
              - step:
                  type: Security
                  name: Checkmarx
                  identifier: checkmarx
                  spec:
                    connectorRef: account.Harness_Docker_Connector
                    privileged: true
                    settings:
                      product_name: checkmarx
                      product_config_name: checkmarx
                      policy_type: manualUpload
                      scan_type: repository
                      repository_project: payment-service
                      repository_branch: <+codebase.branch>
                      customer_artifacts_path: sto_tests/scan_tools/checkmarx/test_data
                      manual_upload_filename: "001"
                    imagePullPolicy: Always
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
              - step:
                  type: Security
                  name: Sonar_STO
                  identifier: Sonar_Scan_Vulnerabilities
                  spec:
                    privileged: true
                    settings:
                      policy_type: manualUpload
                      scan_type: repository
                      repository_branch: <+codebase.branch>
                      product_name: sonarqube
                      product_access_token: <+secrets.getValue("productaccesstoken")>
                      product_project_name: payment-service
                      product_project_key: payment-service
                      product_domain: http://sonar.harness-demo.site
                      product_config_name: sonarqube-agent
                      product_lookup_type: byKey
                      repository_project: payment-service
                      customer_artifacts_path: sto_tests/scan_tools/sonarqube/test_data
                      manual_upload_filename: "001"
                    imagePullPolicy: Always
                  when:
                    stageStatus: Success
              - step:
                  type: Plugin
                  name: sonarqube
                  identifier: sonarqube
                  spec:
                    connectorRef: nikpdockerhub
                    image: nikpap/harness-plugin:sonarqube
                    privileged: true
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/SonarqubeJunitResults.xml"
                    settings:
                      SONAR_URL: http://35.214.81.102
                      SONAR_PORT: "9000"
                      SONAR_TOKEN: <+secrets.getValue("sonardevxtoken")>
                      SONAR_PROJECT_KEY: devxdemo
                      SONAR_REPORT_NAME: sonarqube-report-name
                    imagePullPolicy: Always
                  when:
                    stageStatus: Success
                  failureStrategies: []
          - step:
              type: SaveCacheS3
              name: Savemavenrepo
              identifier: Savemavenrepo
              spec:
                connectorRef: nikpaws
                region: eu-west-2
                bucket: nikp-maven
                key: payment-service-ci
                sourcePaths:
                  - ./maven/repository
                archiveFormat: Tar
                override: true
                resources:
                  limits:
                    memory: 512Mi
                    cpu: "0.5"
              when:
                stageStatus: Success
              failureStrategies: []
          - step:
              type: BuildAndPushECR
              name: pushToECR
              identifier: pushToECR
              spec:
                connectorRef: nikpaws
                region: eu-west-2
                account: "759984737373"
                imageName: payment-service
                tags:
                  - <+pipeline.sequenceId>
                dockerfile: /harness/payment-service/Dockerfile
                optimize: true
                resources:
                  limits:
                    memory: 1Gi
                    cpu: "1"
              when:
                stageStatus: Success
                condition: <+pipeline.variables.seusername> == 'aws'
              failureStrategies: []
          - step:
              type: BuildAndPushDockerRegistry
              name: pushToDockerHub
              identifier: pushToDockerHub
              spec:
                connectorRef: nikpdockerhub
                repo: nikpap/payment-service
                tags:
                  - <+pipeline.sequenceId>
                dockerfile: /harness/payment-service/Dockerfile
                optimize: true
                resources:
                  limits:
                    memory: 4Gi
                    cpu: "4"
              when:
                stageStatus: Success
              failureStrategies: []
          - parallel:
              - step:
                  type: Security
                  name: Veracode
                  identifier: veracode
                  spec:
                    privileged: true
                    settings:
                      product_name: veracode
                      product_config_name: default
                      policy_type: ingestionOnly
                      scan_type: repository
                      repository_project: payment-service
                      repository_branch: <+codebase.branch>
                      customer_artifacts_path: sto_tests/scan_tools/veracode/test_data
                      manual_upload_filename: "001"
                    imagePullPolicy: Always
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.seusername> != "nikpapag"
              - step:
                  type: Security
                  name: Aqua
                  identifier: Aqua2
                  spec:
                    privileged: true
                    settings:
                      product_name: aqua-trivy
                      product_config_name: aqua-trivy
                      policy_type: manualUpload
                      scan_type: container
                      container_type: local_image
                      container_domain: docker.io
                      container_project: nodegoat
                      container_tag: local
                      fail_on_severity: HIGH
                      customer_artifacts_path: sto_tests/scan_tools/aqua_trivy/test_data
                      manual_upload_filename: "001"
                    imagePullPolicy: Always
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.run_owasp_scan> == true
      serviceConfig:
        serviceRef: ""
        serviceDefinition:
          type: Kubernetes
          spec:
            variables: []
      sharedPaths:
        - /var/run
      serviceDependencies:
        - identifier: dind
          name: dind
          type: Service
          spec:
            connectorRef: nikpdockerhub
            image: docker:dind
            privileged: true
            entrypoint:
              - dockerd-entrypoint.sh
            imagePullPolicy: IfNotPresent
            resources:
              limits:
                memory: 500Mi
                cpu: 300m
    when:
      pipelineStatus: Success
    variables:
      - name: sto_api_key
        type: Secret
        value: STOJWT
      - name: runner_registry_username
        type: Secret
        value: ZN_Docker_Student_Username
      - name: runner_registry_token
        type: Secret
        value: zeronorthpass
      - name: runner_tag
        type: String
        value: dev
      - name: api_domain_name
        type: String
        value: https://api.sto.harness.io
  identifier: Java_Build
  versionLabel: v0.2
